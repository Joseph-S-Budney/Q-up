/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package joe;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.util.Date;

import org.bson.Document;
import org.bson.types.ObjectId;

import org.bson.conversions.Bson;
import com.mongodb.client.MongoClient;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import com.mongodb.client.model.Projections;
import com.mongodb.client.MongoCursor;

public class App extends JFrame {
        private static JLabel outputlabel=new JLabel( );
        private static JButton nameButton= new JButton("Send");
        private static JLabel questionLabel=new JLabel("Enter your question here");
        private static JTextField messageField=new JTextField(25);
        private static String uri = "mongodb+srv://josbudney:ZbXSdrVMvBHnWRb7@bay-path.tkovhhw.mongodb.net/?retryWrites=true&w=majority";

        String outputMessage="Thank you for the information";
       
       
        
        public static void onRun() {

        }

        public static void buttonClicked(ActionEvent e){

            try (MongoClient mongoClient = MongoClients.create(uri)) {
                MongoDatabase database = mongoClient.getDatabase("Q-Up");
                MongoCollection<Document> collection = database.getCollection("messages");
                Document message = new Document("_id", new ObjectId());
                message.append("message", messageField.getText()).append("dateSent", new Date().toString()); 
                collection.insertOne( message );
                outputlabel.setText(messageField.getText());
            }

            //JOptionPane.showMessageDialog(null,"Button Works","Hi",JOptionPane.INFORMATION_MESSAGE);
            /*
                1. Strip from the screen objects
                2. do something with the data from the screen
                3. output the something
    
             */
      
            /*String[] columnNames = new String[]{"Question","Answer"};
           
            Object[][] data = new Object[9][2];
            for(int r=0;r<data.length;r++){
                for(int c=0;c<data[r].length;c++){
                    if(c==1){
                        data[r][c]=chickmenAnswer;
                    }
                    else{
                        data[r][c]=yourQuestion;
                    }
                }
            }*/
     
    
    
        }         
         
    
    // Force the scrollbars to always be displayed
    
    /*scrollPane.setVerticalScrollBarPolicy(
        JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);  
    frame.add(scrollPane);
         frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
         frame.setSize(400,400);
         frame.setLocationRelativeTo(null);  
         frame.setVisible(true);
        }*/
    
    public static void main(String[] args) {
        
        /* try (MongoClient mongoClient = MongoClients.create(uri)) {
            MongoDatabase database = mongoClient.getDatabase("sample_mflix");
            MongoCollection<Document> collection = database.getCollection("movies");
            Document doc = collection.find(eq("title", "Back to the Future")).first();
            if (doc != null) {
                System.out.println(doc.toJson());
            } else {
                System.out.println("No matching documents found.");
            }
        } */
        App window = new App();
        window.setSize(1000,500);
        window.setVisible(true);
        window.setTitle("My JFrame");
        window.setLayout(new FlowLayout());
        try (MongoClient mongoClient = MongoClients.create(uri)) {
            MongoDatabase database = mongoClient.getDatabase("Q-Up");
            MongoCollection<Document> collection = database.getCollection("messages");
            Bson projectionFields = Projections.fields(
                Projections.include("message"),
                Projections.excludeId());
            MongoCursor<Document> cursor = collection.find()
                .projection(projectionFields).iterator();
            try{
                while(cursor.hasNext()){
                    window.getContentPane().add(new JLabel(cursor.next().toJson()));
                }
            } finally {
                cursor.close();
            } 
        }
        window.getContentPane().add(questionLabel);
        window.getContentPane().add(messageField);
        window.getContentPane().add(new JLabel("    "));
        window.getContentPane().add(nameButton);
       
        window.getContentPane().add(outputlabel);
        nameButton.addActionListener(new ActionListener(){
            public void actionPerformed(ActionEvent e){
                buttonClicked(e);
            }
        });
        
    
        window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    }
}
